rpi_srst_hist
-------------

sup_rst historian database and dashboard server (infuxdb + grafana)
update for Debian GNU/Linux 11 (bullseye) on aarch64 (get it with lsb_release -ds and uname -m)

# enforce server security
sudo apt install ufw fail2ban
sudo ufw enable

# global packages
sudo apt install

## InfluxDB part

# add influxdb repo
curl -sL https://repos.influxdata.com/influxdb.key | gpg --dearmor \
  | sudo tee /etc/apt/trusted.gpg.d/influxdb.gpg  >/dev/null
echo "deb https://repos.influxdata.com/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/influxdb.list

# update package index to include influxdata source
sudo apt update

# install influxdb and python libs
sudo apt install influxdb python3-requests python3-influxdb

# update influxdb default conf
# setting reporting-disabled to true at beginning of the file to disable sending telemetry data
# in [http] section, set http-bind-address to "127.0.0.1:8086" for bind to IPv4 localhost only
sudo vim /etc/infludb/influxdb.conf

# first run and initial setup
sudo systemctl start influxd

# create DB
influx -execute "CREATE DATABASE srst_historian"
# fix default retention policy
influx -execute "ALTER RETENTION POLICY autogen ON srst_historian DURATION 120d SHARD DURATION 1d DEFAULT"
# check it
influx -execute "SHOW RETENTION POLICIES ON srst_historian"
# credentials
# admin user
influx -execute "CREATE USER admin WITH PASSWORD 'admin' WITH ALL PRIVILEGES"
# grafana user
influx -execute "CREATE USER grafana WITH PASSWORD 'grafana'"
influx -execute "GRANT READ ON srst_historian TO grafana"
# data feeder script user
influx -execute "CREATE USER gw_srst_hist WITH PASSWORD 'gw_srst_hist'"
influx -execute "GRANT WRITE ON srst_historian TO gw_srst_hist"

# turn on http auth on influxdb
# edit "influxdb.conf" in [http] section update auth-enabled to true (near line 259)
sudo vim /etc/influxdb/influxdb.conf
# restart to activate change
sudo systemctl restart influxd

# restore influx database (if replace an existing server)
# TODO: add command here

## Data feeder script
# add supervisor package
sudo apt install supervisor
# copy script and activate it in supervisor
sudo cp usr/local/bin/gw_srst_hist /usr/local/bin/
sudo cp etc/supervisor/conf.d/gw_srst_hist.conf /etc/supervisor/conf.d/
# wait network is setup at next pi reboot
# sudo supervisorctl update


## Grafana part

# add grafana repo
curl -sL https://packages.grafana.com/gpg.key | gpg --dearmor \
  | sudo tee /etc/apt/trusted.gpg.d/grafana.gpg  >/dev/null
echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee /etc/apt/sources.list.d/grafana.list

# update package index
sudo apt update

# install debian package
sudo apt install grafana

# SSL setup
sudo mkdir /etc/grafana/ssl/
# build SSL cert/key file and copy it to /etc/grafana/ssl/
./build_ssl.sh
sudo mv grafana.cert grafana.key /etc/grafana/ssl/
# allow grafana process to read it
sudo chown -R root:grafana /etc/grafana/ssl/
sudo chmod 0644 /etc/grafana/ssl/*.cert
sudo chmod 0640 /etc/grafana/ssl/*.key
# update grafana conf
# turn on SSL, at [server] section:
#   - set "protocol" to "https"
#   - update "cert_file" and "cert_key" to reflect system path (/etc/grafana/ssl/*.cert and *.key)
# disable reporting to grafana.org or updates check, at [analytics] section:
#   - set reporting_enabled to false
#   - set check_for_updates to false
#   - set check_for_plugin_updates to false
sudo vim /etc/grafana/grafana.ini

# grafana startup
sudo systemctl enable grafana-server.service
sudo systemctl start grafana-server.service

# update ufw rule to open 3000/tcp
sudo ufw allow proto tcp from x.x.x.x/xx to any port 3000

# open browser to http://<IP OF RPI>:3000/
#   - connect to grafana with admin/admin auth
#   - customize admin password
# add "influxdb" datasource
#   - set URL as http://localhost:8086
#   - set database as srst_historian
#   - set auth as grafana/grafana
#   - take care to set min time interval to 40s (since we update every 30s)


## Global server part

# setup rpi.backup
mkdir -p /home/pi/git && cd /home/pi/git
git clone https://github.com/sourceperl/rpi.backup
cd ~/git/rpi.backup
sudo ./rpi-tools/setup-rpi-tools.sh

# server backup: /boot and / to NAS server
sudo cp usr/local/sbin/send_fs_to_nas /usr/local/sbin/
sudo cp etc/cron.d/send_to_nas /etc/cron.d/

# network setup
cat <<EOF | sudo tee -a /etc/dhcpcd.conf
# set static IP (add by LLe)
interface eth0
static ip_address=163.111.168.12/24
static routers=163.111.168.1
EOF

# update time sources
sudo sed -i "s/^#NTP=/NTP=10.148.63.25 10.147.32.53/" /etc/systemd/timesyncd.conf
sudo systemctl restart systemd-timesyncd.service

# change hostname to rpi_srst_hist
  - raspi-config (choice N1)
  - reboot
